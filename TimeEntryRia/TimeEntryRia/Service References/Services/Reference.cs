//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace TimeEntryRia.Services {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SummaryRow", Namespace="http://schemas.datacontract.org/2004/07/TimeEntryRia.Web.Models")]
    public partial class SummaryRow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double FriTotalField;
        
        private bool IsTotalRowField;
        
        private double MonTotalField;
        
        private string NameField;
        
        private System.Nullable<int> ProjectIdField;
        
        private double SatTotalField;
        
        private double SunTotalField;
        
        private double ThuTotalField;
        
        private double TotalField;
        
        private double TueTotalField;
        
        private double WedTotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FriTotal {
            get {
                return this.FriTotalField;
            }
            set {
                if ((this.FriTotalField.Equals(value) != true)) {
                    this.FriTotalField = value;
                    this.RaisePropertyChanged("FriTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTotalRow {
            get {
                return this.IsTotalRowField;
            }
            set {
                if ((this.IsTotalRowField.Equals(value) != true)) {
                    this.IsTotalRowField = value;
                    this.RaisePropertyChanged("IsTotalRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MonTotal {
            get {
                return this.MonTotalField;
            }
            set {
                if ((this.MonTotalField.Equals(value) != true)) {
                    this.MonTotalField = value;
                    this.RaisePropertyChanged("MonTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SatTotal {
            get {
                return this.SatTotalField;
            }
            set {
                if ((this.SatTotalField.Equals(value) != true)) {
                    this.SatTotalField = value;
                    this.RaisePropertyChanged("SatTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SunTotal {
            get {
                return this.SunTotalField;
            }
            set {
                if ((this.SunTotalField.Equals(value) != true)) {
                    this.SunTotalField = value;
                    this.RaisePropertyChanged("SunTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ThuTotal {
            get {
                return this.ThuTotalField;
            }
            set {
                if ((this.ThuTotalField.Equals(value) != true)) {
                    this.ThuTotalField = value;
                    this.RaisePropertyChanged("ThuTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TueTotal {
            get {
                return this.TueTotalField;
            }
            set {
                if ((this.TueTotalField.Equals(value) != true)) {
                    this.TueTotalField = value;
                    this.RaisePropertyChanged("TueTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WedTotal {
            get {
                return this.WedTotalField;
            }
            set {
                if ((this.WedTotalField.Equals(value) != true)) {
                    this.WedTotalField = value;
                    this.RaisePropertyChanged("WedTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.custommayd.com/timeentry", ConfigurationName="Services.TimesheetSummaryService")]
    public interface TimesheetSummaryService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.custommayd.com/timeentry/TimesheetSummaryService/GetWeekSummary", ReplyAction="http://www.custommayd.com/timeentry/TimesheetSummaryService/GetWeekSummaryRespons" +
            "e")]
        System.IAsyncResult BeginGetWeekSummary(int userId, System.DateTime weekStartDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow> EndGetWeekSummary(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TimesheetSummaryServiceChannel : TimeEntryRia.Services.TimesheetSummaryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWeekSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWeekSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimesheetSummaryServiceClient : System.ServiceModel.ClientBase<TimeEntryRia.Services.TimesheetSummaryService>, TimeEntryRia.Services.TimesheetSummaryService {
        
        private BeginOperationDelegate onBeginGetWeekSummaryDelegate;
        
        private EndOperationDelegate onEndGetWeekSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onGetWeekSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TimesheetSummaryServiceClient() {
        }
        
        public TimesheetSummaryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimesheetSummaryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimesheetSummaryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimesheetSummaryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetWeekSummaryCompletedEventArgs> GetWeekSummaryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TimeEntryRia.Services.TimesheetSummaryService.BeginGetWeekSummary(int userId, System.DateTime weekStartDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWeekSummary(userId, weekStartDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow> TimeEntryRia.Services.TimesheetSummaryService.EndGetWeekSummary(System.IAsyncResult result) {
            return base.Channel.EndGetWeekSummary(result);
        }
        
        private System.IAsyncResult OnBeginGetWeekSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            System.DateTime weekStartDate = ((System.DateTime)(inValues[1]));
            return ((TimeEntryRia.Services.TimesheetSummaryService)(this)).BeginGetWeekSummary(userId, weekStartDate, callback, asyncState);
        }
        
        private object[] OnEndGetWeekSummary(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow> retVal = ((TimeEntryRia.Services.TimesheetSummaryService)(this)).EndGetWeekSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWeekSummaryCompleted(object state) {
            if ((this.GetWeekSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWeekSummaryCompleted(this, new GetWeekSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWeekSummaryAsync(int userId, System.DateTime weekStartDate) {
            this.GetWeekSummaryAsync(userId, weekStartDate, null);
        }
        
        public void GetWeekSummaryAsync(int userId, System.DateTime weekStartDate, object userState) {
            if ((this.onBeginGetWeekSummaryDelegate == null)) {
                this.onBeginGetWeekSummaryDelegate = new BeginOperationDelegate(this.OnBeginGetWeekSummary);
            }
            if ((this.onEndGetWeekSummaryDelegate == null)) {
                this.onEndGetWeekSummaryDelegate = new EndOperationDelegate(this.OnEndGetWeekSummary);
            }
            if ((this.onGetWeekSummaryCompletedDelegate == null)) {
                this.onGetWeekSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWeekSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginGetWeekSummaryDelegate, new object[] {
                        userId,
                        weekStartDate}, this.onEndGetWeekSummaryDelegate, this.onGetWeekSummaryCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TimeEntryRia.Services.TimesheetSummaryService CreateChannel() {
            return new TimesheetSummaryServiceClientChannel(this);
        }
        
        private class TimesheetSummaryServiceClientChannel : ChannelBase<TimeEntryRia.Services.TimesheetSummaryService>, TimeEntryRia.Services.TimesheetSummaryService {
            
            public TimesheetSummaryServiceClientChannel(System.ServiceModel.ClientBase<TimeEntryRia.Services.TimesheetSummaryService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetWeekSummary(int userId, System.DateTime weekStartDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = weekStartDate;
                System.IAsyncResult _result = base.BeginInvoke("GetWeekSummary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow> EndGetWeekSummary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow> _result = ((System.Collections.ObjectModel.ObservableCollection<TimeEntryRia.Services.SummaryRow>)(base.EndInvoke("GetWeekSummary", _args, result)));
                return _result;
            }
        }
    }
}
